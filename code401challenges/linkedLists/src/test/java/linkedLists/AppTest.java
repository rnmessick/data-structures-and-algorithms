/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linkedLists;

import org.junit.Test;
import static org.junit.Assert.*;

public class AppTest {
    @Test public void testAppHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull("app should have a greeting", classUnderTest.getGreeting());
    }
    @Test
    public void testNewEmptyLinkedList(){
        LinkedList newList = new LinkedList();
        assertTrue("linked list should be empty", newList.isEmpty());
        assertEquals("Length should be zero",0, newList.length());
    }

    // Can properly insert into the linked list
    @Test
    public void testLinkedList_hasContent(){
        LinkedList newList = new LinkedList();
        newList.Insert(newList,"Baldr is my doggo");
        assertFalse("linked list should have content", newList.isEmpty());
        assertEquals("Length should be 1 long",1, newList.length());
    }

    // Can properly insert multiple nodes into the linked list
    @Test
    public void testLinkedList_addMultipleNodes(){
        LinkedList newList = new LinkedList();
        newList.Insert(newList,"A");
        System.out.println("content should be A  " + newList);
        newList.Insert(newList,"B");
        newList.Insert(newList,"C");
        System.out.println("content is  " + newList);
        assertEquals("Length should be 3 long", 3, newList.length());
        }

//    @Test
//    public  void testLinkedList_returnsList(){
//        String[] expected = {"Hi", "There", "Friend"};
//        String[] actual = {"Hi", "There", "Friend"};
//        assertArrayEquals("Should read Hi There Friend", expected, actual);
//
//    }


       /*
        Will return true when finding a value within the linked list that exists
        Will return false when searching for a value in the linked list that does not exist
        Can properly return a collection of all the values that exist in the linked list
     */
}
